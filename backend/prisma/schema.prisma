// This is your Prisma schema file

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  VENDOR
}

enum TokenStatus {
  PENDING
  APPROVED
  REJECTED
  QUEUED
  IN_PROGRESS
  COMPLETED
  CANCELLED
}

model User {
  id          String   @id @default(cuid())
  email       String   @unique
  name        String
  password    String
  phoneNumber String?
  address     String?
  role        Role     @default(USER)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  tokens Token[]

  @@map("users")
}

model Vendor {
  id          String   @id @default(cuid())
  email       String   @unique
  name        String
  password    String
  phoneNumber String?
  address     String?
  services    String[] // Array of service types offered
  role        Role     @default(VENDOR)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  tokens Token[]

  @@map("vendors")
}

model Token {
  id                  String      @id @default(cuid())
  userId              String
  vendorId            String
  serviceType         String
  subject             String      @default("")
  description         String      @default("")
  params              Json? // Additional parameters for the service (legacy)
  status              TokenStatus @default(PENDING)
  estimatedCompletion DateTime?
  vendorMessage       String?
  queuePosition       Int?
  createdAt           DateTime    @default(now())
  updatedAt           DateTime    @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  vendor Vendor @relation(fields: [vendorId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([vendorId])
  @@index([status])
  @@index([createdAt])
  @@map("tokens")
}

model SystemConfig {
  id              String   @id @default(cuid())
  key             String   @unique
  value           String
  updatedAt       DateTime @updatedAt

  @@map("system_config")
}
